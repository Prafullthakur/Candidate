{"version":3,"sources":["assets/MyImage.jpg","assets/login.jpg","assets/register.jpg","components/Home.js","components/Login.js","components/Register.js","Routes/Navigator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","useState","click","setClick","category","Image","image","skillsheading","name","location","salary","skills","state","className","onClick","href","window","map","data","src","skill","type","placeholder","categ","Login","email","setEmail","password","setPassword","alt","value","onChange","e","target","Register","confpassword","setConfPassword","Navigator","exact","path","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,yMCE5B,SAASC,IAAQ,IAAD,EACHC,IAAMC,UAAS,GADZ,mBACtBC,EADsB,KACfC,EADe,OAEGH,IAAMC,SAAS,CAC7C,0BACA,0BACA,qBACA,uBACA,0BAP2B,mBAEtBG,EAFsB,aASHJ,IAAMC,SAASI,MATZ,mBAStBC,EATsB,aAUHN,IAAMC,SAAS,CACvC,CACEM,cAAe,sCACfC,KAAM,kBACNC,SAAU,mCACVC,OAAQ,eACRC,OAAQ,CAAC,OAAQ,YAAa,QAEhC,CACEJ,cAAe,sCACfC,KAAM,kBACNC,SAAU,mCACVC,OAAQ,eACRC,OAAQ,CAAC,OAAQ,YAAa,QAEhC,CACEJ,cAAe,sCACfC,KAAM,kBACNC,SAAU,mCACVC,OAAQ,eACRC,OAAQ,CAAC,OAAQ,YAAa,QAEhC,CACEJ,cAAe,sCACfC,KAAM,kBACNC,SAAU,mCACVC,OAAQ,eACRC,OAAQ,CAAC,OAAQ,YAAa,WArCL,mBAUtBC,EAVsB,UAwC7B,OACE,oCACE,6BACE,yBAAKC,UAAU,OACb,8CAEA,yBAAKA,UAAU,QACb,yBACEA,UAAU,WACVC,QAAS,WAELX,GADED,KAON,yBAAKW,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aAIpBX,EACC,yBAAKW,UAAU,aACb,4BACE,4BACE,uBAAGE,KAAK,UAAR,UAEF,4BACE,uBAAGA,KAAK,aAAR,eAKN,GAEF,yBAAKF,UAAU,gBACb,yBACEA,UAAU,UACVC,QAAS,WACPE,OAAOP,SAASM,KAAO,WAH3B,SAQA,yBACEF,UAAU,UACVC,QAAS,WACPE,OAAOP,SAASM,KAAO,cAH3B,cAUJ,iCACE,yBAAKF,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACZD,EAAMK,KAAI,SAACC,GAAD,OACT,yBAAKL,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKM,IAAKb,IAEV,yBAAKO,UAAU,kBACb,4BAAKK,EAAKX,eACV,4BAAKW,EAAKV,MACV,yBAAKK,UAAU,mBACb,yBAAKA,UAAU,oBACb,0CADF,IACsB,2BAAIK,EAAKT,WAE/B,yBAAKI,UAAU,oBACb,wCADF,IACoB,2BAAIK,EAAKR,UAG/B,yBAAKG,UAAU,iBACZK,EAAKP,OAAOM,KAAI,SAACG,GAAD,OACf,yBAAKP,UAAU,UAAUO,cAQvC,yBAAKP,UAAU,aACb,yBAAKA,UAAU,WACb,uBAAGE,KAAK,IAAR,SAEF,yBAAKF,UAAU,WACb,uBAAGE,KAAK,IAAR,WAIN,yBAAKF,UAAU,SACb,yBAAKA,UAAU,UACb,+CACA,2BAAOQ,KAAK,OAAOC,YAAY,oBAEjC,yBAAKT,UAAU,YACb,kDACA,4BACGT,EAASa,KAAI,SAACM,GAAD,OACZ,4BACE,2BAAOF,KAAK,aACZ,2BAAIE,SAKZ,yBAAKV,UAAU,YACb,6C,qBCxJC,SAASW,IAAS,IAAD,EACJxB,IAAMC,SAAS,MADX,mBACvBwB,EADuB,KAChBC,EADgB,OAEE1B,IAAMC,SAAS,MAFjB,mBAEvB0B,EAFuB,KAEbC,EAFa,KAI9B,OACE,yBAAKf,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACZ,IACD,yBAAKM,IAAKd,IAAOwB,IAAI,MAGvB,yBAAKhB,UAAU,cACb,qCACA,8BACE,2BACEL,KAAK,QACLa,KAAK,QACLC,YAAY,aACZQ,MAAOL,EACPM,SAAU,SAACC,GACTN,EAASM,EAAEC,OAAOH,UAGtB,2BACEtB,KAAK,WACLa,KAAK,WACLC,YAAY,WACZQ,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAAYI,EAAEC,OAAOH,WAK3B,yBAAKjB,UAAU,gBACb,sCAEF,uBAAGA,UAAU,OAAOE,KAAK,aAAzB,8B,qBCtCK,SAASmB,IAAY,IAAD,EACPlC,IAAMC,SAAS,MADR,mBAC1BwB,EAD0B,KACnBC,EADmB,OAED1B,IAAMC,SAAS,MAFd,mBAE1B0B,EAF0B,KAEhBC,EAFgB,OAGO5B,IAAMC,SAAS,MAHtB,mBAG1BkC,EAH0B,KAGZC,EAHY,KAIjC,OACE,yBAAKvB,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACZ,IACD,yBAAKM,IAAKd,IAAOwB,IAAI,MAGvB,yBAAKhB,UAAU,cACb,wCACA,8BACE,2BACEQ,KAAK,QACLC,YAAY,aACZQ,MAAOL,EACPM,SAAU,SAACC,GACTN,EAASM,EAAEC,OAAOH,UAGtB,2BACET,KAAK,WACLC,YAAY,WACZQ,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAAYI,EAAEC,OAAOH,UAGzB,2BACET,KAAK,WACLC,YAAY,mBACZQ,MAAOK,EACPJ,SAAU,SAACC,GACTI,EAAgBJ,EAAEC,OAAOH,WAK/B,yBAAKjB,UAAU,mBACb,wCAEF,uBAAGA,UAAU,OAAOE,KAAK,UAAzB,wBCzCK,SAASsB,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,SAASC,UAAWhB,IACtC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YAAYC,UAAWN,M,MCHlCO,MAJf,WACE,OAAO,kBAACJ,EAAD,OCOWK,QACW,cAA7B1B,OAAOP,SAASkC,UAEe,UAA7B3B,OAAOP,SAASkC,UAEhB3B,OAAOP,SAASkC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.20dec3fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyImage.88e9563f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/login.09f81253.jpg\";","module.exports = __webpack_public_path__ + \"static/media/register.180146a7.jpg\";","import React from \"react\";\r\nimport Image from \"../assets/MyImage.jpg\";\r\nexport default function Home() {\r\n  const [click, setClick] = React.useState(false);\r\n  const [category, setCategory] = React.useState([\r\n    \"Accounting & Finance(2)\",\r\n    \"Education & Training(2)\",\r\n    \"Graphics Design(2)\",\r\n    \"Restaurant & Food(3)\",\r\n    \"Website & Software(1)\",\r\n  ]);\r\n  const [image, setImage] = React.useState(Image);\r\n  const [state, setState] = React.useState([\r\n    {\r\n      skillsheading: \"Graphics Design, Website & Software\",\r\n      name: \"Priyansh Vatsal\",\r\n      location: \"Laxminagar Colony, Jaspur, India\",\r\n      salary: \"$10 per hour\",\r\n      skills: [\"HTML\", \"Photoshop\", \"PHP\"],\r\n    },\r\n    {\r\n      skillsheading: \"Graphics Design, Website & Software\",\r\n      name: \"Priyansh Vatsal\",\r\n      location: \"Laxminagar Colony, Jaspur, India\",\r\n      salary: \"$10 per hour\",\r\n      skills: [\"HTML\", \"Photoshop\", \"PHP\"],\r\n    },\r\n    {\r\n      skillsheading: \"Graphics Design, Website & Software\",\r\n      name: \"Priyansh Vatsal\",\r\n      location: \"Laxminagar Colony, Jaspur, India\",\r\n      salary: \"$10 per hour\",\r\n      skills: [\"HTML\", \"Photoshop\", \"PHP\"],\r\n    },\r\n    {\r\n      skillsheading: \"Graphics Design, Website & Software\",\r\n      name: \"Priyansh Vatsal\",\r\n      location: \"Laxminagar Colony, Jaspur, India\",\r\n      salary: \"$10 per hour\",\r\n      skills: [\"HTML\", \"Photoshop\", \"PHP\"],\r\n    },\r\n  ]);\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav\">\r\n          <h1>Candidate List</h1>\r\n\r\n          <div className=\"menu\">\r\n            <div\r\n              className=\"menu-bar\"\r\n              onClick={() => {\r\n                if (click) {\r\n                  setClick(false);\r\n                } else {\r\n                  setClick(true);\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"line1\"></div>\r\n              <div className=\"line2\"></div>\r\n              <div className=\"line2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {click ? (\r\n          <div className=\"menu-list\">\r\n            <li>\r\n              <ul>\r\n                <a href=\"/login\">Login</a>\r\n              </ul>\r\n              <ul>\r\n                <a href=\"/register\">Register</a>\r\n              </ul>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"route-option\">\r\n          <div\r\n            className=\"button3\"\r\n            onClick={() => {\r\n              window.location.href = \"/login\";\r\n            }}\r\n          >\r\n            Login\r\n          </div>\r\n          <div\r\n            className=\"button3\"\r\n            onClick={() => {\r\n              window.location.href = \"/register\";\r\n            }}\r\n          >\r\n            Register\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <section>\r\n        <div className=\"container\">\r\n          <div className=\"left\">\r\n            <div className=\"left-second\">\r\n              {state.map((data) => (\r\n                <div className=\"user-one\">\r\n                  <div className=\"user\">\r\n                    <img src={image} />\r\n\r\n                    <div className=\"userone-detail\">\r\n                      <h5>{data.skillsheading}</h5>\r\n                      <h3>{data.name}</h3>\r\n                      <div className=\"userone-address\">\r\n                        <div className=\"userone-address1\">\r\n                          <h5>Location: </h5> <p>{data.location}</p>\r\n                        </div>\r\n                        <div className=\"userone-address2\">\r\n                          <h5>Salary: </h5> <p>{data.salary}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"userone-skils\">\r\n                        {data.skills.map((skill) => (\r\n                          <div className=\"skills\">{skill}</div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"left-last\">\r\n              <div className=\"button1\">\r\n                <a href=\"\">Prev</a>\r\n              </div>\r\n              <div className=\"button2\">\r\n                <a href=\"\">Next</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"search\">\r\n              <h2>Search Keywords</h2>\r\n              <input type=\"text\" placeholder=\"e.g.web desgin\" />\r\n            </div>\r\n            <div className=\"category\">\r\n              <h2>Candidate Category</h2>\r\n              <li>\r\n                {category.map((categ) => (\r\n                  <ul>\r\n                    <input type=\"checkbox\" />\r\n                    <p>{categ}</p>\r\n                  </ul>\r\n                ))}\r\n              </li>\r\n            </div>\r\n            <div className=\"location\">\r\n              <h2>Location</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Image from \"../assets/login.jpg\";\r\nexport default function Login() {\r\n  const [email, setEmail] = React.useState(null);\r\n  const [password, setPassword] = React.useState(null);\r\n\r\n  return (\r\n    <div className=\"main-cont\">\r\n      <div className=\"login-cont\">\r\n        <div className=\"login-img\">\r\n          {\" \"}\r\n          <img src={Image} alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"login-form\">\r\n          <h1>Login</h1>\r\n          <form>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Your Email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </form>\r\n\r\n          <div className=\"login-button\">\r\n            <a>Log in</a>\r\n          </div>\r\n          <a className=\"last\" href=\"/register\">\r\n            Don't have an account ?\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Image from \"../assets/register.jpg\";\r\nexport default function Register() {\r\n  const [email, setEmail] = React.useState(null);\r\n  const [password, setPassword] = React.useState(null);\r\n  const [confpassword, setConfPassword] = React.useState(null);\r\n  return (\r\n    <div className=\"main-cont\">\r\n      <div className=\"login-cont\">\r\n        <div className=\"login-img\">\r\n          {\" \"}\r\n          <img src={Image} alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"login-form\">\r\n          <h1>Register</h1>\r\n          <form>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Your Email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confpassword}\r\n              onChange={(e) => {\r\n                setConfPassword(e.target.value);\r\n              }}\r\n            />\r\n          </form>\r\n\r\n          <div className=\"register-button\">\r\n            <a>Register</a>\r\n          </div>\r\n          <a className=\"last\" href=\"/login\">\r\n            Have an account ?\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../components/Home\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\nexport default function Navigator() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Navigator from \"./Routes/Navigator\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Navigator />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}